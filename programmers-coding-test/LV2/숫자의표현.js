/**
 * Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.

1 + 2 + 3 + 4 + 5 = 15
4 + 5 + 6 = 15
7 + 8 = 15
15 = 15
자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.

제한사항
n은 10,000 이하의 자연수 입니다.
 * @param {} n 
 * @returns 
 * 효율성 테스트 4, 6번이 통과가 안됐었는데, break문 넣으니 테스트4가 통과됐다가, 그걸 주석하니까 갑자기 모든 테스트에 통과돼버렸다. 뭐지? 왜지?
 * 다른 사람 풀이 보니까 n의 홀수인 약수의 개수를 구하면 된다고 한다..... 
 */
function solution(n) {
  let answer = 1; // 자기 자신일 때
  let sum = 0;
  let i = 1;
  let j;
  if (n > 10000) return answer;
  while (i < n / 2) {
    // 시작하는 수가 n의 절반 이상이면 바로 다음 수 하나만 더해도 n보다 크게 됨
    j = i;
    while (sum < n) {
      sum += j;
      if (sum === n) {
        answer++;
        // break;
      }
      j++;
    }
    sum = 0;
    i++;
  }
  return answer;
}

/**
 * 시간초과
 * @param number n
 * @returns
 * 채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.16ms, 33.5MB)
테스트 2 〉	통과 (0.29ms, 33.4MB)
테스트 3 〉	통과 (0.22ms, 33.5MB)
테스트 4 〉	통과 (0.20ms, 33.6MB)
테스트 5 〉	통과 (0.17ms, 33.4MB)
테스트 6 〉	통과 (0.18ms, 33.4MB)
테스트 7 〉	통과 (0.23ms, 33.4MB)
테스트 8 〉	통과 (0.19ms, 33.4MB)
테스트 9 〉	통과 (0.14ms, 33.4MB)
테스트 10 〉	통과 (0.16ms, 33.5MB)
테스트 11 〉	통과 (0.17ms, 33.5MB)
테스트 12 〉	통과 (0.16ms, 33.5MB)
테스트 13 〉	통과 (0.23ms, 33.6MB)
테스트 14 〉	통과 (0.17ms, 33.6MB)
테스트 15 〉	통과 (0.06ms, 33.4MB)
테스트 16 〉	통과 (0.04ms, 33.5MB)
테스트 17 〉	통과 (0.18ms, 33.5MB)
테스트 18 〉	통과 (0.06ms, 33.4MB)
효율성  테스트
테스트 1 〉	실패 (시간 초과)
테스트 2 〉	실패 (시간 초과)
테스트 3 〉	통과 (2.40ms, 36.1MB)
테스트 4 〉	실패 (시간 초과)
테스트 5 〉	실패 (시간 초과)
테스트 6 〉	실패 (시간 초과)
 */
function solution(n) {
  let answer = 1; // 자기 자신일 때
  let sum = 0;
  let i = 1;
  let j;
  while (i < n / 2) {
    // 시작하는 수가 n의 절반 이상이면 바로 다음 수 하나만 더해도 n보다 크게 됨
    j = i;
    while (sum < n) {
      sum += j;
      if (sum === n) {
        answer++;
      }
      j++;
    }
    sum = 0;
    i++;
  }
  return answer;
}
